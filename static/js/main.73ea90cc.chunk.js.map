{"version":3,"sources":["checkingRoute.js","components/Header/index.js","components/Home/index.js","components/Login/index.js","components/NotFound/index.js","components/ProfileDetails/index.js","components/FiltersGroup/index.js","components/JobCard/index.js","components/Jobs/index.js","components/SimilarJobCard/index.js","components/JobItemDetails/index.js","App.js","index.js"],"names":["CheckingRoute","props","undefined","Cookies","get","_jsx","Redirect","to","Route","_objectSpread","withRouter","onClickLogout","remove","history","replace","_jsxs","className","children","Link","src","alt","type","onClick","AiFillHome","BsBriefcaseFill","FiLogOut","Home","_Fragment","Header","Login","_Component","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","state","username","password","showSubmitError","errorMsg","onSubmitFailure","error","setState","onSubmitSuccess","jwtToken","set","expires","onSubmitForm","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","_this$state","userDetails","options","response","data","wrap","_context","prev","next","preventDefault","method","body","JSON","stringify","fetch","sent","json","console","log","ok","jwt_token","error_msg","stop","_x","apply","onChangePassword","target","value","onChangeUsername","renderPassword","htmlFor","id","placeholder","onChange","renderUsername","_inherits","_createClass","key","_this$state2","this","onSubmit","Component","NotFound","apiStatusConstants","ProfileDetails","profileApiStatus","Loader","color","height","width","profileDetails","name","profileImageUrl","shortBio","renderProfile","getProfileDetails","renderProfileFailure","employmentTypesList","label","employmentTypeId","salaryRangesList","salaryRangeId","locationsList","FiltersGroup","activeLocation","renderEmploymentTypesList","updateEmploymentTypesChecked","map","eachType","renderSalaryRangesList","updateSalaryRangeId","activeSalaryRangeId","eachRange","isChecked","checked","each","JobCard","jobDetails","companyLogoUrl","employmentType","jobDescription","location","packagePerAnnum","rating","title","AiFillStar","IoLocationSharp","BsFillBriefcaseFill","Jobs","jobsList","jobsApiStatus","searchInput","employmentTypesChecked","typeId","updatedList","includes","filter","_toConsumableArray","getJobs","employTypes","apiUrl","jobs","updatedData","join","headers","Authorization","eachJob","company_logo_url","employment_type","job_description","package_per_annum","_callee2","_context2","profile_details","profile_image_url","short_bio","renderSearchBar","searchBarID","e","BsSearch","loc","renderSideBar","renderNoJobsView","renderJobsList","_this$state3","filteredJobs","jobsListAfter","renderJobsLoaderView","renderJobsApiFailureView","renderJobsBasedOnAPiStatus","SimilarJobCard","JobItemDetails","jobDetailsApiStatus","similarJobs","getCamelCasedData","job_details","updatedJobDetails","companyWebsiteUrl","company_website_url","skills","eachSkill","imageUrl","image_url","lifeAtCompnay","description","life_at_company","similar_jobs","getJobItemDetails","match","params","_this$getCamelCasedDa","renderLoaderView","renderApiFailureView","renderJobDetails","href","rel","FiExternalLink","renderJobDetailsPage","App","Switch","exact","path","component","ReactDOM","render","React","StrictMode","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.73ea90cc.chunk.js","sourcesContent":["import Cookies from 'js-cookie'\nimport {Redirect, Route} from 'react-router-dom'\n\nconst CheckingRoute = props => {\n  const jwtToken = Cookies.get('jwt_token')\n  if (jwtToken === undefined) {\n    return <Redirect to=\"/login\" />\n  }\n  return <Route {...props} />\n}\nexport default CheckingRoute\n","import {Link, withRouter} from 'react-router-dom'\nimport Cookies from 'js-cookie'\nimport {AiFillHome} from 'react-icons/ai'\nimport {BsBriefcaseFill} from 'react-icons/bs'\nimport {FiLogOut} from 'react-icons/fi'\n\nimport './index.css'\n\nconst Header = props => {\n  const onClickLogout = () => {\n    Cookies.remove('jwt_token')\n    const {history} = props\n    history.replace('/login')\n  }\n  return (\n    <nav className=\"nav-container\">\n      <div className=\"large-display-cont\">\n        <Link to=\"/\">\n          <img\n            className=\"logo-in-header\"\n            src=\"https://assets.ccbp.in/frontend/react-js/logo-img.png\"\n            alt=\"website logo\"\n          />\n        </Link>\n        <ul className=\"menu-container\">\n          <Link to=\"/\" className=\"list-text\">\n            <li>Home</li>\n          </Link>\n          <Link to=\"/jobs\" className=\"list-text\">\n            <li>Jobs</li>\n          </Link>\n          <li>\n            <button\n              type=\"button\"\n              className=\"logout-btn\"\n              onClick={onClickLogout}\n            >\n              Logout\n            </button>\n          </li>\n        </ul>\n      </div>\n      <div className=\"small-display-cont\">\n        <img\n          className=\"logo-in-header\"\n          src=\"https://assets.ccbp.in/frontend/react-js/logo-img.png\"\n          alt=\"website logo\"\n        />\n        <div className=\"menu-container\">\n          <Link to=\"/\" className=\"list-text-icon\">\n            <AiFillHome />\n          </Link>\n          <Link to=\"/jobs\" className=\"list-text-icon\">\n            <BsBriefcaseFill />\n          </Link>\n          <button\n            type=\"button\"\n            className=\"small-display-logout-btn\"\n            onClick={onClickLogout}\n          >\n            <FiLogOut className=\"list-text-icon\" />\n          </button>\n        </div>\n      </div>\n    </nav>\n  )\n}\nexport default withRouter(Header)\n","import {Link} from 'react-router-dom'\n\nimport './index.css'\nimport Header from '../Header'\n\nconst Home = () => (\n  <>\n    <Header />\n    <div className=\"home-bg-container\">\n      <div className=\"half-cont\">\n        <h1 className=\"home-heading\">Find The Job That Fits Your Life</h1>\n        <p className=\"home-para\">\n          Millions of people are searching for jobs, salary information, company\n          reviews. Find the job that fits your abilities and potential.\n        </p>\n        <Link to=\"/jobs\">\n          <button type=\"button\" className=\"home-btn\">\n            Find Jobs\n          </button>\n        </Link>\n      </div>\n    </div>\n  </>\n)\n\nexport default Home\n","import Cookies from 'js-cookie'\nimport {Redirect} from 'react-router-dom'\nimport {Component} from 'react'\n\nimport './index.css'\n\nclass Login extends Component {\n  state = {username: '', password: '', showSubmitError: false, errorMsg: ''}\n\n  onSubmitFailure = error => {\n    this.setState({showSubmitError: true, errorMsg: error})\n  }\n\n  onSubmitSuccess = jwtToken => {\n    const {history} = this.props\n    Cookies.set('jwt_token', jwtToken, {expires: 30})\n    history.replace('/')\n  }\n\n  onSubmitForm = async event => {\n    event.preventDefault()\n    const {username, password} = this.state\n    const userDetails = {username, password}\n    const url = 'https://apis.ccbp.in/login'\n    const options = {\n      method: 'POST',\n      body: JSON.stringify(userDetails),\n    }\n    const response = await fetch(url, options)\n    const data = await response.json()\n    console.log(data)\n    if (response.ok === true) {\n      this.onSubmitSuccess(data.jwt_token)\n    } else {\n      this.onSubmitFailure(data.error_msg)\n    }\n  }\n\n  onChangePassword = event => {\n    this.setState({password: event.target.value})\n  }\n\n  onChangeUsername = event => {\n    this.setState({username: event.target.value})\n  }\n\n  renderPassword = () => {\n    const {password} = this.state\n    return (\n      <>\n        <label htmlFor=\"password\">PASSWORD</label>\n        <input\n          className=\"input\"\n          id=\"password\"\n          type=\"password\"\n          value={password}\n          placeholder=\"Password\"\n          onChange={this.onChangePassword}\n        />\n      </>\n    )\n  }\n\n  renderUsername = () => {\n    const {username} = this.state\n    return (\n      <>\n        <label htmlFor=\"username\">USERNAME</label>\n        <input\n          className=\"input\"\n          id=\"username\"\n          type=\"text\"\n          value={username}\n          placeholder=\"Username\"\n          onChange={this.onChangeUsername}\n        />\n      </>\n    )\n  }\n\n  render() {\n    const {showSubmitError, errorMsg} = this.state\n    const jwtToken = Cookies.get('jwt_token')\n    if (jwtToken !== undefined) {\n      return <Redirect to=\"/\" />\n    }\n\n    return (\n      <div className=\"login-bg-container\">\n        <form className=\"form-container\" onSubmit={this.onSubmitForm}>\n          <img\n            className=\"login-logo-img\"\n            src=\"https://assets.ccbp.in/frontend/react-js/logo-img.png\"\n            alt=\"website logo\"\n          />\n          <div className=\"user-input-container\">{this.renderUsername()}</div>\n          <div className=\"user-input-container\">{this.renderPassword()}</div>\n          <button className=\"login-btn\" type=\"submit\">\n            Login\n          </button>\n          {showSubmitError && <p className=\"error-msg\">*{errorMsg}</p>}\n        </form>\n      </div>\n    )\n  }\n}\nexport default Login\n","import './index.css'\n\nconst NotFound = () => (\n  <div className=\"not-found-page\">\n    <div className=\"not-found-container\">\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/jobby-app-not-found-img.png\"\n        alt=\"not found\"\n        className=\"not-found-image\"\n      />\n      <h1 className=\"not-found-heading\">Page Not Found</h1>\n      <p className=\"not-found-description\">\n        We are sorry, the page you requested could not be found\n      </p>\n    </div>\n  </div>\n)\n\nexport default NotFound\n","import Loader from 'react-loader-spinner'\n\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css'\nimport './index.css'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n}\n\nconst ProfileDetails = props => {\n  const renderProfile = () => {\n    const {profileDetails} = props\n    const {name, profileImageUrl, shortBio} = profileDetails\n\n    return (\n      <div className=\"profile-details-container\">\n        <img src={profileImageUrl} alt=\"profile\" className=\"profile-image\" />\n        <h1 className=\"profile-name\">{name}</h1>\n        <p className=\"profile-bio\">{shortBio}</p>\n      </div>\n    )\n  }\n\n  const renderProfileFailure = () => {\n    const {getProfileDetails} = props\n    return (\n      <div className=\"profile-failure-container\">\n        <button\n          className=\"retry-button\"\n          type=\"button\"\n          onClick={getProfileDetails}\n        >\n          Retry\n        </button>\n      </div>\n    )\n  }\n\n  const renderProfileLoader = () => (\n    <div className=\"loader-container-profile\" data-testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#ffffff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  const {profileApiStatus} = props\n\n  switch (profileApiStatus) {\n    case apiStatusConstants.inProgress:\n      return renderProfileLoader()\n    case apiStatusConstants.success:\n      return renderProfile()\n    case apiStatusConstants.failure:\n      return renderProfileFailure()\n    default:\n      return null\n  }\n}\n\nexport default ProfileDetails\n","import './index.css'\n\n// These are the lists used in the application. You can move them to any component needed.\nconst employmentTypesList = [\n  {\n    label: 'Full Time',\n    employmentTypeId: 'FULLTIME',\n  },\n  {\n    label: 'Part Time',\n    employmentTypeId: 'PARTTIME',\n  },\n  {\n    label: 'Freelance',\n    employmentTypeId: 'FREELANCE',\n  },\n  {\n    label: 'Internship',\n    employmentTypeId: 'INTERNSHIP',\n  },\n]\n\nconst salaryRangesList = [\n  {\n    salaryRangeId: '1000000',\n    label: '10 LPA and above',\n  },\n  {\n    salaryRangeId: '2000000',\n    label: '20 LPA and above',\n  },\n  {\n    salaryRangeId: '3000000',\n    label: '30 LPA and above',\n  },\n  {\n    salaryRangeId: '4000000',\n    label: '40 LPA and above',\n  },\n]\n\nconst locationsList = ['Hyderabad', 'Bangalore', 'Chennai', 'Delhi', 'Mumbai']\n\nconst FiltersGroup = props => {\n  const {activeLocation} = props\n\n  const renderEmploymentTypesList = () => {\n    const {updateEmploymentTypesChecked} = props\n\n    return employmentTypesList.map(eachType => {\n      const updateTypeslist = () =>\n        updateEmploymentTypesChecked(eachType.employmentTypeId)\n\n      return (\n        <li className=\"fliters-list-item\" key={eachType.employmentTypeId}>\n          <input\n            type=\"checkbox\"\n            className=\"checkbox-input\"\n            id={eachType.employmentTypeId}\n            onChange={updateTypeslist}\n          />\n          <label htmlFor={eachType.employmentTypeId} className=\"filter-label\">\n            {eachType.label}\n          </label>\n        </li>\n      )\n    })\n  }\n\n  const renderEmploymentTypes = () => (\n    <>\n      <h1 className=\"filter-heading\">Type of Employment</h1>\n      <ul className=\"filters-list\">{renderEmploymentTypesList()}</ul>\n    </>\n  )\n\n  const renderSalaryRangesList = () => {\n    const {updateSalaryRangeId, activeSalaryRangeId} = props\n\n    return salaryRangesList.map(eachRange => {\n      const onChangeRange = () => updateSalaryRangeId(eachRange.salaryRangeId)\n\n      const isChecked = eachRange.salaryRangeId === activeSalaryRangeId\n\n      return (\n        <li className=\"fliters-list-item\" key={eachRange.salaryRangeId}>\n          <input\n            type=\"radio\"\n            className=\"checkbox-input\"\n            id={eachRange.salaryRangeId}\n            name=\"salary ranges\"\n            onChange={onChangeRange}\n            checked={isChecked}\n          />\n          <label htmlFor={eachRange.salaryRangeId} className=\"filter-label\">\n            {eachRange.label}\n          </label>\n        </li>\n      )\n    })\n  }\n\n  const renderLocationsCheckbox = () => (\n    <>\n      <h1 className=\"filter-heading\">Locations</h1>\n      <ul className=\"filters-list\">\n        {locationsList.map(each => {\n          const updateLocation = () => activeLocation(each)\n          return (\n            <li className=\"fliters-list-item\" key={each}>\n              <input\n                type=\"checkbox\"\n                className=\"checkbox-input\"\n                id={each}\n                onChange={updateLocation}\n              />\n              <label htmlFor={each} className=\"filter-label\">\n                {each}\n              </label>\n            </li>\n          )\n        })}\n      </ul>\n    </>\n  )\n\n  const renderSalaryRangesTypes = () => (\n    <>\n      <h1 className=\"filter-heading\">Salary Range</h1>\n      <ul className=\"filters-list\">{renderSalaryRangesList()}</ul>\n    </>\n  )\n\n  return (\n    <div className=\"filters-group-container\">\n      {renderEmploymentTypes()}\n      <hr className=\"separator\" />\n      {renderSalaryRangesTypes()}\n      <hr className=\"separator\" />\n      {renderLocationsCheckbox()}\n    </div>\n  )\n}\n\nexport default FiltersGroup\n","import {AiFillStar} from 'react-icons/ai'\nimport {IoLocationSharp} from 'react-icons/io5'\nimport {BsFillBriefcaseFill} from 'react-icons/bs'\nimport {Link} from 'react-router-dom'\n\nimport './index.css'\n\nconst JobCard = props => {\n  const {jobDetails} = props\n  const {\n    companyLogoUrl,\n    employmentType,\n    jobDescription,\n    location,\n    packagePerAnnum,\n    rating,\n    title,\n    id,\n  } = jobDetails\n  return (\n    <li className=\"job-card\">\n      <Link to={`/jobs/${id}`} className=\"job-card-link\">\n        <div className=\"logo-title-container-card\">\n          <img\n            src={companyLogoUrl}\n            alt=\"company logo\"\n            className=\"company-logo-card\"\n          />\n          <div className=\"title-rating-container-card\">\n            <h1 className=\"job-title-card\">{title}</h1>\n            <div className=\"rating-container-card\">\n              <AiFillStar className=\"star-icon-card\" />\n              <p className=\"rating-number-card\">{rating}</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"location-package-container-card\">\n          <div className=\"icon-type-container-card\">\n            <IoLocationSharp className=\"type-icon\" />\n            <p className=\"type-text\">{location}</p>\n          </div>\n          <div className=\"icon-type-container-card\">\n            <BsFillBriefcaseFill className=\"type-icon\" />\n            <p className=\"type-text\">{employmentType}</p>\n          </div>\n          <p className=\"package-text\">{packagePerAnnum}</p>\n        </div>\n        <hr className=\"separator\" />\n        <h1 className=\"description-heading-card\">Description</h1>\n        <p className=\"job-description-card\">{jobDescription}</p>\n      </Link>\n    </li>\n  )\n}\n\nexport default JobCard\n","import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport {BsSearch} from 'react-icons/bs'\nimport Loader from 'react-loader-spinner'\n\nimport Header from '../Header'\nimport ProfileDetails from '../ProfileDetails'\nimport FiltersGroup from '../FiltersGroup'\nimport JobCard from '../JobCard'\n\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css'\nimport './index.css'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n}\n\nclass Jobs extends Component {\n  state = {\n    profileDetails: {},\n    profileApiStatus: apiStatusConstants.initial,\n    jobsList: [],\n    jobsApiStatus: apiStatusConstants.initial,\n    searchInput: '',\n    activeSalaryRangeId: '',\n    employmentTypesChecked: [],\n    location: [],\n  }\n\n  componentDidMount() {\n    this.getProfileDetails()\n    this.getJobs()\n  }\n\n  updateEmploymentTypesChecked = typeId => {\n    const {employmentTypesChecked} = this.state\n    let updatedList = employmentTypesChecked\n    if (employmentTypesChecked.includes(typeId)) {\n      updatedList = employmentTypesChecked.filter(\n        eachType => eachType !== typeId,\n      )\n    } else {\n      updatedList = [...updatedList, typeId]\n    }\n\n    this.setState({employmentTypesChecked: updatedList}, this.getJobs)\n  }\n\n  updateSalaryRangeId = activeSalaryRangeId =>\n    this.setState({activeSalaryRangeId}, this.getJobs)\n\n  getJobs = async () => {\n    this.setState({jobsApiStatus: apiStatusConstants.inProgress})\n\n    const {\n      activeSalaryRangeId,\n      employmentTypesChecked,\n      searchInput,\n    } = this.state\n    const employTypes = employmentTypesChecked.join(',')\n    const jwtToken = Cookies.get('jwt_token')\n    const apiUrl = `https://apis.ccbp.in/jobs?employment_type=${employTypes}&minimum_package=${activeSalaryRangeId}&search=${searchInput}`\n\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    const response = await fetch(apiUrl, options)\n    const data = await response.json()\n    if (response.ok === true) {\n      const {jobs} = data\n      const updatedData = jobs.map(eachJob => ({\n        companyLogoUrl: eachJob.company_logo_url,\n        employmentType: eachJob.employment_type,\n        id: eachJob.id,\n        jobDescription: eachJob.job_description,\n        location: eachJob.location,\n        packagePerAnnum: eachJob.package_per_annum,\n        rating: eachJob.rating,\n        title: eachJob.title,\n      }))\n      this.setState({\n        jobsList: updatedData,\n        jobsApiStatus: apiStatusConstants.success,\n      })\n    } else {\n      this.setState({jobsApiStatus: apiStatusConstants.failure})\n    }\n  }\n\n  getProfileDetails = async () => {\n    this.setState({profileApiStatus: apiStatusConstants.inProgress})\n\n    const jwtToken = Cookies.get('jwt_token')\n    const apiUrl = 'https://apis.ccbp.in/profile'\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    const response = await fetch(apiUrl, options)\n    const data = await response.json()\n    if (response.ok === true) {\n      const profileDetails = data.profile_details\n      const updatedData = {\n        name: profileDetails.name,\n        profileImageUrl: profileDetails.profile_image_url,\n        shortBio: profileDetails.short_bio,\n      }\n      this.setState({\n        profileDetails: updatedData,\n        profileApiStatus: apiStatusConstants.success,\n      })\n    } else {\n      this.setState({profileApiStatus: apiStatusConstants.failure})\n    }\n  }\n\n  renderSearchBar = searchBarID => {\n    const {searchInput} = this.state\n    return (\n      <div className=\"search-bar\" id={searchBarID}>\n        <input\n          className=\"search-input\"\n          type=\"search\"\n          placeholder=\"Search\"\n          value={searchInput}\n          onChange={e => this.setState({searchInput: e.target.value})}\n        />\n        <button\n          className=\"search-button\"\n          type=\"button\"\n          data-testid=\"searchButton\"\n          onClick={() => this.getJobs()}\n        >\n          <BsSearch className=\"search-icon\" />\n        </button>\n      </div>\n    )\n  }\n\n  activeLocation = loc => {\n    const {location} = this.state\n    if (location.includes(loc)) {\n      this.setState(prev => ({\n        location: prev.location.filter(each => each !== loc),\n      }))\n    } else {\n      this.setState(prev => ({location: [...prev.location, loc]}))\n    }\n  }\n\n  renderSideBar = () => {\n    const {\n      profileDetails,\n      profileApiStatus,\n      activeSalaryRangeId,\n      employmentTypesChecked,\n    } = this.state\n    return (\n      <div className=\"side-bar\">\n        {this.renderSearchBar('smallSearchBar')}\n        <ProfileDetails\n          profileDetails={profileDetails}\n          profileApiStatus={profileApiStatus}\n          getProfileDetails={this.getProfileDetails}\n        />\n        <hr className=\"separator\" />\n        <FiltersGroup\n          updateSalaryRangeId={this.updateSalaryRangeId}\n          activeSalaryRangeId={activeSalaryRangeId}\n          updateEmploymentTypesChecked={this.updateEmploymentTypesChecked}\n          employmentTypesChecked={employmentTypesChecked}\n          activeLocation={this.activeLocation}\n        />\n      </div>\n    )\n  }\n\n  renderNoJobsView = () => (\n    <div className=\"no-jobs-container\">\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/no-jobs-img.png\"\n        alt=\"no jobs\"\n        className=\"no-jobs-image\"\n      />\n      <h1 className=\"no-jobs-heading\">No Jobs Found</h1>\n      <p className=\"no-jobs-description\">\n        We could not find any jobs. Try other filters.\n      </p>\n    </div>\n  )\n\n  renderJobsList = () => {\n    const {jobsList, location} = this.state\n    const filteredJobs = jobsList.filter(each =>\n      location.includes(each.location),\n    )\n    const jobsListAfter = filteredJobs.length > 0 ? filteredJobs : jobsList\n    return (\n      <>\n        {jobsListAfter.length > 0 ? (\n          <ul className=\"jobs-list\">\n            {jobsListAfter.map(eachJob => (\n              <JobCard key={eachJob.id} jobDetails={eachJob} />\n            ))}\n          </ul>\n        ) : (\n          this.renderNoJobsView()\n        )}\n      </>\n    )\n  }\n\n  renderJobsLoaderView = () => (\n    <div className=\"jobs-loader-container\" data-testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#ffffff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderJobsApiFailureView = () => (\n    <div className=\"jobs-api-failure-container\">\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/failure-img.png\"\n        alt=\"failure view\"\n        className=\"job-api-failure-image\"\n      />\n      <h1 className=\"failure-view-heading\">Oops! Something Went Wrong</h1>\n      <p className=\"failure-view-description\">\n        We cannot seem to find the page you are looking for.\n      </p>\n      <button\n        type=\"button\"\n        className=\"retry-button\"\n        onClick={() => this.getJobs()}\n      >\n        Retry\n      </button>\n    </div>\n  )\n\n  renderJobsBasedOnAPiStatus = () => {\n    const {jobsApiStatus} = this.state\n\n    switch (jobsApiStatus) {\n      case apiStatusConstants.inProgress:\n        return this.renderJobsLoaderView()\n      case apiStatusConstants.success:\n        return this.renderJobsList()\n      case apiStatusConstants.failure:\n        return this.renderJobsApiFailureView()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"jobs-page-container\">\n        <Header />\n        <div className=\"jobs-page\">\n          {this.renderSideBar()}\n          <div className=\"jobs-container\">\n            {this.renderSearchBar('largeSearchBar')}\n            {this.renderJobsBasedOnAPiStatus()}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default Jobs\n","import {AiFillStar} from 'react-icons/ai'\nimport {IoLocationSharp} from 'react-icons/io5'\nimport {BsFillBriefcaseFill} from 'react-icons/bs'\nimport './index.css'\n\nconst SimilarJobCard = props => {\n  const {jobDetails} = props\n  const {\n    companyLogoUrl,\n    employmentType,\n    jobDescription,\n    location,\n    rating,\n    title,\n  } = jobDetails\n\n  return (\n    <li className=\"similar-job-card\">\n      <div className=\"logo-title-container-card\">\n        <img\n          src={companyLogoUrl}\n          alt=\"similar job company logo\"\n          className=\"company-logo-card\"\n        />\n        <div className=\"title-rating-container-card\">\n          <h1 className=\"job-title-card\">{title}</h1>\n          <div className=\"rating-container-card\">\n            <AiFillStar className=\"star-icon-card\" />\n            <p className=\"rating-number-card\">{rating}</p>\n          </div>\n        </div>\n      </div>\n      <h1 className=\"description-heading-card\">Description</h1>\n      <p className=\"job-description-card\">{jobDescription}</p>\n      <div className=\"location-package-container-card\">\n        <div className=\"icon-type-container-card\">\n          <IoLocationSharp className=\"type-icon\" />\n          <p className=\"type-text\">{location}</p>\n        </div>\n        <div className=\"icon-type-container-card\">\n          <BsFillBriefcaseFill className=\"type-icon\" />\n          <p className=\"type-text\">{employmentType}</p>\n        </div>\n      </div>\n    </li>\n  )\n}\n\nexport default SimilarJobCard\n","import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport {AiFillStar} from 'react-icons/ai'\nimport {IoLocationSharp} from 'react-icons/io5'\nimport {BsFillBriefcaseFill} from 'react-icons/bs'\nimport {FiExternalLink} from 'react-icons/fi'\nimport Loader from 'react-loader-spinner'\n\nimport Header from '../Header'\nimport SimilarJobCard from '../SimilarJobCard'\n\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css'\nimport './index.css'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n}\n\nclass JobItemDetails extends Component {\n  state = {\n    jobDetailsApiStatus: apiStatusConstants.initial,\n    jobDetails: {},\n    similarJobs: [],\n  }\n\n  componentDidMount() {\n    this.getJobItemDetails()\n  }\n\n  getCamelCasedData = data => {\n    const jobDetails = data.job_details\n\n    const updatedJobDetails = {\n      companyLogoUrl: jobDetails.company_logo_url,\n      companyWebsiteUrl: jobDetails.company_website_url,\n      employmentType: jobDetails.employment_type,\n      jobDescription: jobDetails.job_description,\n      location: jobDetails.location,\n      rating: jobDetails.rating,\n      title: jobDetails.title,\n      packagePerAnnum: jobDetails.package_per_annum,\n      skills: jobDetails.skills.map(eachSkill => ({\n        imageUrl: eachSkill.image_url,\n        name: eachSkill.name,\n      })),\n      lifeAtCompnay: {\n        description: jobDetails.life_at_company.description,\n        imageUrl: jobDetails.life_at_company.image_url,\n      },\n    }\n\n    const similarJobs = data.similar_jobs.map(eachJob => ({\n      companyLogoUrl: eachJob.company_logo_url,\n      employmentType: eachJob.employment_type,\n      id: eachJob.id,\n      jobDescription: eachJob.job_description,\n      location: eachJob.location,\n      rating: eachJob.rating,\n      title: eachJob.title,\n    }))\n\n    return {updatedJobDetails, similarJobs}\n  }\n\n  getJobItemDetails = async () => {\n    this.setState({jobDetailsApiStatus: apiStatusConstants.inProgress})\n    const {match} = this.props\n    const {params} = match\n    const {id} = params\n\n    const jwtToken = Cookies.get('jwt_token')\n\n    const apiUrl = `https://apis.ccbp.in/jobs/${id}`\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    const response = await fetch(apiUrl, options)\n    const data = await response.json()\n    if (response.ok === true) {\n      const {updatedJobDetails, similarJobs} = this.getCamelCasedData(data)\n\n      this.setState({\n        jobDetails: updatedJobDetails,\n        similarJobs,\n        jobDetailsApiStatus: apiStatusConstants.success,\n      })\n    } else {\n      this.setState({jobDetailsApiStatus: apiStatusConstants.failure})\n    }\n  }\n\n  renderLoaderView = () => (\n    <div className=\"jobs-loader-container\" data-testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#ffffff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderApiFailureView = () => (\n    <div className=\"jobs-api-failure-container\">\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/failure-img.png\"\n        alt=\"failure view\"\n        className=\"job-api-failure-image\"\n      />\n      <h1 className=\"failure-view-heading\">Oops! Something Went Wrong</h1>\n      <p className=\"failure-view-description\">\n        We cannot seem to find the page you are looking for.\n      </p>\n      <button\n        type=\"button\"\n        className=\"retry-button\"\n        onClick={() => this.getJobItemDetails()}\n      >\n        Retry\n      </button>\n    </div>\n  )\n\n  renderJobDetails = () => {\n    const {jobDetails, similarJobs} = this.state\n    const {\n      companyLogoUrl,\n      employmentType,\n      jobDescription,\n      location,\n      rating,\n      title,\n      packagePerAnnum,\n      companyWebsiteUrl,\n      skills,\n      lifeAtCompnay,\n    } = jobDetails\n\n    return (\n      <div className=\"job-details-content-container\">\n        <div className=\"job-details\">\n          <div className=\"logo-title-container-card\">\n            <img\n              src={companyLogoUrl}\n              alt=\"job details company logo\"\n              className=\"company-logo-card\"\n            />\n            <div className=\"title-rating-container-card\">\n              <h1 className=\"job-title-card\">{title}</h1>\n              <div className=\"rating-container-card\">\n                <AiFillStar className=\"star-icon-card\" />\n                <p className=\"rating-number-card\">{rating}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"location-package-container-card\">\n            <div className=\"icon-type-container-card\">\n              <IoLocationSharp className=\"type-icon\" />\n              <p className=\"type-text\">{location}</p>\n            </div>\n            <div className=\"icon-type-container-card\">\n              <BsFillBriefcaseFill className=\"type-icon\" />\n              <p className=\"type-text\">{employmentType}</p>\n            </div>\n            <p className=\"package-text\">{packagePerAnnum}</p>\n          </div>\n\n          <hr className=\"separator\" />\n          <div className=\"description-visit-link-container\">\n            <h1 className=\"description-heading-card\">Description</h1>\n            <a\n              href={companyWebsiteUrl}\n              target=\"_blank\"\n              className=\"company-link\"\n              rel=\"noopener noreferrer\"\n            >\n              Visit\n              <FiExternalLink className=\"external-link-logo\" />\n            </a>\n          </div>\n          <p className=\"job-description-card\">{jobDescription}</p>\n          <h1 className=\"skills-heading\">Skills</h1>\n          <ul className=\"skills-list\">\n            {skills.map(eachSkill => {\n              const {imageUrl, name} = eachSkill\n              return (\n                <li className=\"skill-item\" key={name}>\n                  <img src={imageUrl} alt={name} className=\"skill-image\" />\n                  <p className=\"skill-name\">{name}</p>\n                </li>\n              )\n            })}\n          </ul>\n          <h1 className=\"life-at-company-heading\">Life at Company</h1>\n          <div className=\"company-life-container\">\n            <p className=\"life-description\">{lifeAtCompnay.description}</p>\n            <img\n              className=\"life-image\"\n              src={lifeAtCompnay.imageUrl}\n              alt=\"life at company\"\n            />\n          </div>\n        </div>\n        <h1 className=\"similar-jobs-heading\">Similar Jobs</h1>\n        <ul className=\"similar-jobs-list\">\n          {similarJobs.map(eachJob => (\n            <SimilarJobCard key={eachJob.id} jobDetails={eachJob} />\n          ))}\n        </ul>\n      </div>\n    )\n  }\n\n  renderJobDetailsPage() {\n    const {jobDetailsApiStatus} = this.state\n    switch (jobDetailsApiStatus) {\n      case apiStatusConstants.inProgress:\n        return this.renderLoaderView()\n      case apiStatusConstants.success:\n        return this.renderJobDetails()\n      case apiStatusConstants.failure:\n        return this.renderApiFailureView()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"job-details-page\">\n        <Header />\n        {this.renderJobDetailsPage()}\n      </div>\n    )\n  }\n}\n\nexport default JobItemDetails\n","import {Route, Switch, Redirect} from 'react-router-dom'\n\nimport CheckingRoute from './checkingRoute'\nimport Home from './components/Home'\nimport Login from './components/Login'\nimport NotFound from './components/NotFound'\nimport Jobs from './components/Jobs'\nimport JobItemDetails from './components/JobItemDetails'\nimport './App.css'\n\n// These are the lists used in the application. You can move them to any component needed.\n\n// Replace your code here\nconst App = () => (\n  <Switch>\n    <Route exact path=\"/login\" component={Login} />\n    <CheckingRoute exact path=\"/\" component={Home} />\n    <CheckingRoute exact path=\"/jobs\" component={Jobs} />\n    <CheckingRoute exact path=\"/jobs/:id\" component={JobItemDetails} />\n    <Route exact path=\"/not-found\" component={NotFound} />\n    <Redirect to=\"/not-found\" />\n  </Switch>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {BrowserRouter} from 'react-router-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}